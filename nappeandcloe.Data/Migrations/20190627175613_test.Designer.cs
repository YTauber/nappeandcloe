// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nappeandcloe.Data;

namespace nappeandcloe.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20190627175613_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nappeandcloe.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("nappeandcloe.Data.Damage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Charge");

                    b.Property<DateTime>("Date");

                    b.Property<int>("FixedAmount");

                    b.Property<int?>("LinerId");

                    b.Property<int>("OrderDetailId");

                    b.Property<int?>("OrderDetailOrderId");

                    b.Property<int?>("OrderDetailProductId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("LinerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("OrderDetailOrderId", "OrderDetailProductId");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("nappeandcloe.Data.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("nappeandcloe.Data.Liner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cahrge");

                    b.Property<decimal>("MyCaharge");

                    b.Property<decimal>("MyPay");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("Liners");
                });

            modelBuilder.Entity("nappeandcloe.Data.Lost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Charge");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("LinerId");

                    b.Property<int>("LostAmount");

                    b.Property<int>("OrderDetailId");

                    b.Property<int?>("OrderDetailOrderId");

                    b.Property<int?>("OrderDetailProductId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("LinerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("OrderDetailOrderId", "OrderDetailProductId");

                    b.ToTable("Losts");
                });

            modelBuilder.Entity("nappeandcloe.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("DeliveryCharge");

                    b.Property<decimal>("Discount");

                    b.Property<int?>("LinerId");

                    b.Property<string>("Notes");

                    b.Property<int?>("PaymentId");

                    b.Property<decimal>("Tax");

                    b.HasKey("Id");

                    b.HasIndex("LinerId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("nappeandcloe.Data.OrderDetail", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Id");

                    b.Property<decimal>("PricePer");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("nappeandcloe.Data.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<int>("OrderId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("nappeandcloe.Data.PickUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("LinerId");

                    b.Property<int>("OrderDetailId");

                    b.Property<int?>("OrderDetailOrderId");

                    b.Property<int?>("OrderDetailProductId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("LinerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("OrderDetailOrderId", "OrderDetailProductId");

                    b.ToTable("PickUps");
                });

            modelBuilder.Entity("nappeandcloe.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<string>("PictureName");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("nappeandcloe.Data.ProductLabel", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("LabelId");

                    b.HasKey("ProductId", "LabelId");

                    b.HasIndex("LabelId");

                    b.ToTable("ProductLabels");
                });

            modelBuilder.Entity("nappeandcloe.Data.Return", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("LinerId");

                    b.Property<int>("OrderDetailId");

                    b.Property<int?>("OrderDetailOrderId");

                    b.Property<int?>("OrderDetailProductId");

                    b.Property<int?>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int>("UsedAmount");

                    b.HasKey("Id");

                    b.HasIndex("LinerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("OrderDetailOrderId", "OrderDetailProductId");

                    b.ToTable("Returns");
                });

            modelBuilder.Entity("nappeandcloe.Data.Damage", b =>
                {
                    b.HasOne("nappeandcloe.Data.Liner")
                        .WithMany("Damages")
                        .HasForeignKey("LinerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product")
                        .WithMany("Damages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.OrderDetail", "OrderDetail")
                        .WithMany("Damages")
                        .HasForeignKey("OrderDetailOrderId", "OrderDetailProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.Lost", b =>
                {
                    b.HasOne("nappeandcloe.Data.Liner")
                        .WithMany("Losts")
                        .HasForeignKey("LinerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product")
                        .WithMany("Losts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.OrderDetail", "OrderDetail")
                        .WithMany("Losts")
                        .HasForeignKey("OrderDetailOrderId", "OrderDetailProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.Order", b =>
                {
                    b.HasOne("nappeandcloe.Data.Liner", "Liner")
                        .WithMany()
                        .HasForeignKey("LinerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.OrderDetail", b =>
                {
                    b.HasOne("nappeandcloe.Data.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.Payment", b =>
                {
                    b.HasOne("nappeandcloe.Data.Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.PickUp", b =>
                {
                    b.HasOne("nappeandcloe.Data.Liner")
                        .WithMany("PickUps")
                        .HasForeignKey("LinerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product")
                        .WithMany("PickUps")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.OrderDetail", "OrderDetail")
                        .WithMany("PickUps")
                        .HasForeignKey("OrderDetailOrderId", "OrderDetailProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.ProductLabel", b =>
                {
                    b.HasOne("nappeandcloe.Data.Label", "Label")
                        .WithMany("ProductLabels")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product", "Product")
                        .WithMany("ProductLabels")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("nappeandcloe.Data.Return", b =>
                {
                    b.HasOne("nappeandcloe.Data.Liner")
                        .WithMany("Returns")
                        .HasForeignKey("LinerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.Product")
                        .WithMany("Returns")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("nappeandcloe.Data.OrderDetail", "OrderDetail")
                        .WithMany("Returns")
                        .HasForeignKey("OrderDetailOrderId", "OrderDetailProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
